{"version":3,"sources":["../node_modules/@material-ui/icons/KeyboardArrowRight.js","../node_modules/@material-ui/icons/KeyboardArrowLeft.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/icons/Add.js","../node_modules/@material-ui/icons/Close.js","../node_modules/@material-ui/icons/SelectAll.js","../node_modules/@material-ui/icons/MoreVert.js","components/Timetable.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","Card","React","forwardRef","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","component","Component","padding","paddingBottom","useStyles","makeStyles","theme","paper","border","palette","primary","main","input","color","loadingContainer","textAlign","margin","paddingTop","autofillText","secondary","autofilled","autofillCard","backgroundColor","contrastText","caretColor","dispatch","useDispatch","minDate","Date","maxDate","maxAutofill","useState","selectedDate","setSelectedDate","currentHour","setHour","anchorEl","setAnchorEl","open","setOpen","formatDate","getDate","getMonth","getFullYear","day","String","getDay","isSmall","useMediaQuery","timetable","setTimetable","clientTimetable","setClientTimetable","autofill","setAutofill","autofillOpen","setAutofillOpen","autofillSlots","setAutofillSlots","subjects","useSelector","state","autoSubjects","setAutoSubjects","requireds","setRequireds","recents","setRecents","autofillInfo","setAutofillInfo","addScoresDialog","setAddScoresDialog","examGrades","setExamGrades","examScoreSubjects","setExamScoreSubjects","stop","setStop","loading","setLoading","hours","changeType","date","hour","title","e","restOfDate","undefined","type","target","changeTitle","keyDown","key","blur","closeAutofill","selectAutofill","restOfDay","includes","filter","x","setRepeat","mode","repeatType","restOfWeekRepeats","omit","weekrepeats","restOfDayRepeats","dayrepeats","restOfRepeatType","autofillOptions","setMonth","setHours","setDate","useEffect","fetch","method","headers","body","JSON","stringify","newData","sessionID","getCookie","username","then","res","json","data","errors","payload","catch","console","log","response","err","error","style","display","alignItems","variant","replace","onClick","marginLeft","justifyContent","newDate","disabled","getTime","minWidth","values","length","onClose","aria-labelledby","aria-describedby","id","autoFocus","multiple","filterSelectedOptions","onChange","val","newRecents","newRequireds","forEach","a","options","renderTags","getTagProps","map","option","index","label","renderInput","params","fullWidth","i","marginTop","marginRight","width","size","labelId","Array","keys","newGrades","orientation","openTo","select","MenuProps","PaperProps","split","flex","placeholder","onKeyDown","inputProps","maxLength","currentTarget","keepMounted","Boolean"],"mappings":"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","file":"static/js/10.260d14b4.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\"\n}), 'KeyboardArrowLeft');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2zM7 17h10V7H7v10zm2-8h6v6H9V9z\"\n}), 'SelectAll');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\n\nexports.default = _default;","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport {\n  Card,\n  CardContent,\n  useMediaQuery,\n  Typography,\n  makeStyles,\n  InputBase,\n  IconButton,\n  Tooltip,\n  DialogContentText,\n  Chip,\n  TextField,\n  FormControl,\n  InputLabel,\n} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport DotsIcon from \"@material-ui/icons/MoreVert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { omit } from \"lodash\";\nimport NextIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport PreviousIcon from \"@material-ui/icons/KeyboardArrowLeft\";\nimport CancelIcon from \"@material-ui/icons/Close\";\nimport SelectIcon from \"@material-ui/icons/SelectAll\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport getCookie from \"../api/cookies\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: 0,\n    border: `2px solid ${theme.palette.primary.main}`\n  },\n  input: {\n    color: theme.palette.primary.main\n  },\n  loadingContainer: {\n    textAlign: \"center\",\n    margin: \"0 auto\",\n    paddingTop: \"40%\"\n  },\n  autofillText: {\n    color: theme.palette.secondary.main,\n    margin: \"4px 0\"\n  },\n  autofilled: {\n    color: theme.palette.secondary.main,\n  },\n  autofillCard: {\n    backgroundColor: theme.palette.secondary.main,\n    \"& *\": {\n      color: theme.palette.secondary.contrastText,\n      caretColor: theme.palette.secondary.contrastText\n    }\n  }\n}));\n\nexport default () => {\n  const classes = useStyles(),\n    dispatch = useDispatch(),\n    minDate = new Date(),\n    maxDate = new Date(),\n    maxAutofill = new Date(),\n    [selectedDate, setSelectedDate] = useState(minDate),\n    [currentHour, setHour] = useState(\"\"),\n    [anchorEl, setAnchorEl] = useState(null),\n    [open, setOpen] = useState(false),\n    formatDate =\n      selectedDate.getDate() +\n      \"|\" +\n      (selectedDate.getMonth() + 1) +\n      \"|\" +\n      selectedDate.getFullYear(),\n    day = String(selectedDate.getDay()),\n    isSmall = useMediaQuery(\"(max-width: 800px)\"),\n    [timetable, setTimetable] = useState(false),\n    [clientTimetable, setClientTimetable] = useState(false),\n    [autofill, setAutofill] = useState(false),\n    [autofillOpen, setAutofillOpen] = useState(false),\n    [autofillSlots, setAutofillSlots] = useState({}),\n    { subjects } = useSelector(state => state),\n    [autoSubjects, setAutoSubjects] = useState([]),\n    [requireds, setRequireds] = useState({}),\n    [recents, setRecents] = useState({}),\n    [autofillInfo, setAutofillInfo] = useState(false),\n    [addScoresDialog, setAddScoresDialog] = useState(false),\n    [examGrades, setExamGrades] = useState({}),\n    [examScoreSubjects, setExamScoreSubjects] = useState([]),\n    [stop, setStop] = useState(false),\n    [loading, setLoading] = useState(false),\n    hours = [\n      \"7:00 - 8:00\",\n      \"8:00 - 9:00\",\n      \"9:00 - 10:00\",\n      \"10:00 - 11:00\",\n      \"11:00 - 12:00\",\n      \"12:00 - 13:00\",\n      \"13:00 - 14:00\",\n      \"14:00 - 15:00\",\n      \"15:00 - 16:00\",\n      \"16:00 - 17:00\",\n      \"17:00 - 18:00\",\n      \"18:00 - 19:00\",\n      \"19:00 - 20:00\",\n      \"20:00 - 21:00\",\n      \"21:00 - 22:00\"\n    ],\n    changeType = (date, hour, title) => e => {\n      hour = isSmall ? currentHour : hour;\n      const restOfDate = timetable[date] === undefined ? {} : timetable[date],\n        restOfHour =\n          timetable[date] === undefined\n            ? {}\n            : timetable[date][hour] !== undefined\n            ? timetable[date]\n            : {};\n      setClientTimetable({\n        ...timetable,\n        [date]: {\n          ...restOfDate,\n          [hour]: {\n            title,\n            type: e.target.value\n          }\n        }\n      });\n    },\n    changeTitle = (date, hour, type) => e => {\n      const restOfDate = timetable[date] === undefined ? {} : timetable[date],\n        restOfHour =\n          timetable[date] === undefined\n            ? {}\n            : timetable[date][hour] !== undefined\n            ? timetable[date][hour]\n            : {};\n      setClientTimetable({\n        ...timetable,\n        [date]: {\n          ...restOfDate,\n          [hour]: {\n            type,\n            title: e.target.value\n          }\n        }\n      });\n    },\n    keyDown = e => {\n      if (e.key === \"Enter\") {\n        e.target.blur();\n      }\n    },\n    autoFill = () => {\n      if (autofill) {\n        setAutofillOpen(true);\n      } else {\n        setAutofill(true);\n        setAutofillInfo(true);\n        setSelectedDate(new Date());\n      }\n    },\n    closeAutofill = () => {\n      setAutofillOpen(false);\n    },\n    submitExamGrades = () => {\n      fetch(\"https://maximise.herokuapp.com/users/update_data/grades\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          newData: {\n            //requireds: requireds,\n            //recents: recents,\n          },\n          sessionID: getCookie(\"sessionID\"),\n          username: getCookie(\"email\")\n        })\n      })\n        .then(res => res.json())\n        .then(data => {\n          console.log(data);\n\n          if (JSON.stringify(data.errors) !== \"{}\") {\n            dispatch({\n              type: \"NEW_ERROR\",\n              payload: \"There was an error uploading your exam grades\"\n            });\n          } else {\n            setAddScoresDialog(false);\n          }\n        })\n        .catch(() => {\n          dispatch({\n            type: \"NEW_ERROR\",\n            payload: \"There was an error uploading your exam grades\"\n          });\n        });\n    },\n    /*updateAutofill = hour => e => {\n        setClientTimetable({\n            ...timetable,\n            autofill: {\n                ...timetable.autofill,\n                [day]: {\n                    ...timetable.autofill[day],\n                    [hour]: {\n                        ...timetable.autofill[day][hour],\n                        title: e.target.value,\n                    }\n                }\n            }\n        });\n    },*/\n    submitAutofill = () => {\n        setLoading(true);\n      fetch(\"https://maximise.herokuapp.com/users/update_data/grades\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          newData: {\n            recents, requireds, autofillSlots\n          },\n          sessionID: getCookie(\"sessionID\"),\n          username: getCookie(\"email\")\n        })\n      })\n        .then(res => res.json())\n        .then(data => {\n            setLoading(false);\n            console.log(data);\n            \n          if (JSON.stringify(data.errors) !== \"{}\") {\n            dispatch({\n              type: \"NEW_ERROR\",\n              payload: \"There was an error uploading your exam grades\"\n            });\n          } else {\n              setClientTimetable({...timetable, autofill: data.response});\n            setAutofillOpen(false);\n            setAutofill(false);\n            setAutofillSlots({});\n          }\n        })\n        .catch(() => {\n          dispatch({\n            type: \"NEW_ERROR\",\n            payload: \"There was an error uploading your exam grades\"\n          });\n        });\n    },\n    selectAutofill = hour => e => {\n      if (autofill) {\n        const restOfDay = autofillSlots[day] ? autofillSlots[day] : [];\n        setAutofillSlots({\n          ...autofillSlots,\n          [day]:\n            autofillSlots[day] && autofillSlots[day].includes(hour)\n              ? restOfDay.filter(x => x !== hour)\n              : [...restOfDay, hour]\n        });\n      }\n    },\n    selectAll = () => {\n      setAutofillSlots({\n        ...autofillSlots,\n        [day]: hours\n      });\n    },\n    setRepeat = (mode, date, hour, type, title, repeatType) => () => {\n      if (mode === \"day\" || mode === \"week\") {\n        const restOfWeekRepeats = timetable[mode + \"repeats\"]\n            ? mode !== \"week\"\n              ? omit(timetable.weekrepeats, currentHour)\n              : timetable.weekrepeats\n            : {},\n          restOfDayRepeats = timetable[mode + \"repeats\"]\n            ? mode !== \"day\" && timetable.dayrepeats &&\n              timetable.dayrepeats[currentHour] &&\n              timetable.dayrepeats[currentHour].title === title &&\n              timetable.dayrepeats[currentHour].type === type\n              ? omit(timetable.dayrepeats, currentHour)\n              : timetable.dayrepeats\n            : {},\n          restOfRepeatType = timetable[mode + \"repeats\"]\n            ? timetable[mode + \"repeats\"]\n            : {};\n        const autofillOptions =\n          timetable.autofill && timetable.autofill[selectedDate.getDay()]\n            ? {\n                [selectedDate.getDay()]:\n                  repeatType === \"autofill\"\n                    ? omit(\n                        timetable.autofill[selectedDate.getDay()],\n                        currentHour\n                      )\n                    : timetable.autofill[selectedDate.getDay()]\n              }\n            : {};\n        if (mode === \"week\") {\n          setClientTimetable({\n            ...timetable,\n            dayrepeats: restOfDayRepeats,\n            weekrepeats: {\n              ...restOfRepeatType,\n              [day]: {\n                ...timetable.weekrepeats[day],\n                [hour]: {\n                  type,\n                  title\n                }\n              }\n            },\n            autofill: {\n              ...timetable.autofill,\n              ...autofillOptions\n            }\n          });\n        } else {\n          setClientTimetable({\n            ...timetable,\n            weekrepeats: restOfWeekRepeats,\n            autofill: {\n              ...timetable.autofill,\n              ...autofillOptions\n            },\n            dayrepeats: {\n              ...timetable.dayrepeats,\n              [hour]: {\n                type,\n                title\n              }\n            }\n          });\n        }\n      } else {\n        if (repeatType !== \"\") {\n          if (repeatType === \"week\" || repeatType === \"autofill\") {\n            if (\n                timetable[repeatType + \"repeats\"] && timetable[repeatType + \"repeats\"][selectedDate.getDay()] &&\n              timetable[repeatType + \"repeats\"][selectedDate.getDay()][\n                currentHour\n              ] &&\n              timetable[repeatType + \"repeats\"][selectedDate.getDay()][\n                currentHour\n              ].title === title &&\n              timetable[repeatType + \"repeats\"][selectedDate.getDay()][\n                currentHour\n              ].type === type\n            ) {\n              setClientTimetable({\n                ...timetable,\n                [repeatType + \"repeats\"]: {\n                  ...timetable[repeatType + \"repeats\"],\n                  [selectedDate.getDay()]: omit(\n                    timetable[repeatType + \"repeats\"][selectedDate.getDay()],\n                    currentHour\n                  )\n                }\n              });\n            }\n          } else {\n            if (\n                timetable[repeatType + \"repeats\"] && timetable[repeatType + \"repeats\"][currentHour] &&\n              timetable[repeatType + \"repeats\"][currentHour].title === title &&\n              timetable[repeatType + \"repeats\"][currentHour].type === type\n            ) {\n              setClientTimetable({\n                ...timetable,\n                [repeatType + \"repeats\"]: omit(\n                  timetable[repeatType + \"repeats\"],\n                  currentHour\n                )\n              });\n            }\n          }\n        } else if (\n          timetable && timetable.autofill &&\n          timetable.autofill[selectedDate.getDay()] &&\n          timetable.autofill[selectedDate.getDay()][currentHour] &&\n          timetable.autofill[selectedDate.getDay()][currentHour].title ===\n            title &&\n          timetable.autofill[selectedDate.getDay()][currentHour].type === type\n        ) {\n          setClientTimetable({\n            ...timetable,\n            autofill: {\n              ...timetable.autofill,\n              [selectedDate.getDay()]: omit(\n                timetable[repeatType + \"repeats\"][selectedDate.getDay()],\n                currentHour\n              )\n            }\n          });\n        } else if (\n          timetable && timetable.weekrepeats &&\n          timetable.weekrepeats[selectedDate.getDay()] &&\n          timetable.weekrepeats[selectedDate.getDay()][currentHour] &&\n          timetable.weekrepeats[selectedDate.getDay()][currentHour].title ===\n            title &&\n          timetable.weekrepeats[selectedDate.getDay()][currentHour].type ===\n            type\n        ) {\n          setClientTimetable({\n            ...timetable,\n            weekrepeats: {\n              ...timetable[repeatType + \"repeats\"],\n              [selectedDate.getDay()]: omit(\n                timetable.weekrepeats[selectedDate.getDay()],\n                currentHour\n              )\n            }\n          });\n        } else if (\n            timetable && timetable.dayrepeats &&\n          timetable.dayrepeats[currentHour] &&\n          timetable.dayrepeats[currentHour].title === title &&\n          timetable.dayrepeats[currentHour].type === type\n        ) {\n          setClientTimetable({\n            ...timetable,\n            dayrepeats: omit(timetable.dayrepeats, currentHour)\n          });\n        }\n      }\n      setAnchorEl(null);\n    };\n  maxDate.setMonth(maxDate.getMonth() + 2);\n  minDate.setHours(23, 59, 29, 999);\n  maxDate.setHours(0, 0, 0, 0);\n  maxAutofill.setDate(maxDate.getDate() + 6);\n  maxAutofill.setHours(0, 0, 0, 0);\n  useEffect(() => {\n    if (clientTimetable) {\n        setTimetable(clientTimetable);\n     fetch(\"https://maximise.herokuapp.com/users/update_data/timetable\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          newData: clientTimetable,\n          sessionID: getCookie(\"sessionID\"),\n          username: getCookie(\"email\")\n        })\n      })\n        .then(res => res.json())\n        .then(data => {\n          if (JSON.stringify(data.errors) !== \"{}\") {\n            dispatch({\n              type: \"NEW_ERROR\",\n              payload: \"There was an error updating your timetable\"\n            });\n          } else {\n            setTimetable(clientTimetable);\n          }\n        })\n        .catch(() => {\n          dispatch({\n            type: \"NEW_ERROR\",\n            payload: \"There was an error updating your agenda\"\n          });\n        });\n    }\n  }, [clientTimetable]);\n  useEffect(() => {\n    fetch(\"https://maximise.herokuapp.com/users/get_data/timetable\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        sessionID: getCookie(\"sessionID\"),\n        username: getCookie(\"email\")\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        console.log(\"data\");\n        if (JSON.stringify(data.errors) !== \"{}\") {\n          dispatch({\n            type: \"NEW_ERROR\",\n            payload: \"There was an error loading your timetable\"\n          });\n        } else {\n          setTimetable(data.response ? data.response : {});\n          setClientTimetable(data.response ? data.response : {});\n        }\n      })\n      .catch(err => {\n        console.error(err);\n        dispatch({\n          type: \"NEW_ERROR\",\n          payload: \"There was an error loading your timetable\"\n        });\n      });\n  }, []);\n  useEffect(() => {\n    if (\n      JSON.stringify(autofillSlots[\"0\"]) === JSON.stringify(hours) &&\n      JSON.stringify(autofillSlots[\"1\"]) === JSON.stringify(hours) &&\n      JSON.stringify(autofillSlots[\"2\"]) === JSON.stringify(hours) &&\n      JSON.stringify(autofillSlots[\"3\"]) === JSON.stringify(hours) &&\n      JSON.stringify(autofillSlots[\"4\"]) === JSON.stringify(hours) &&\n      JSON.stringify(autofillSlots[\"5\"]) === JSON.stringify(hours) &&\n      JSON.stringify(autofillSlots[\"6\"]) === JSON.stringify(hours)\n    ) {\n      setStop(true);\n    }\n  }, [autofillSlots]);\n  return timetable ? (\n    <Paper className=\"fade padding\">\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\"\n        }}\n      >\n        <Typography variant=\"h4\">{formatDate.replace(/\\|/g, \"/\")}</Typography>\n        <Button onClick={() => setOpen(true)} style={{ marginLeft: 8 }}>\n          Change\n        </Button>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\"\n        }}\n      >\n        <Tooltip title=\"Previous Day\">\n          <IconButton\n            onClick={() => {\n              const newDate = new Date(selectedDate);\n              newDate.setDate(newDate.getDate() - 1);\n              setSelectedDate(new Date(newDate));\n            }}\n            disabled={minDate.getTime() >= selectedDate.getTime()}\n          >\n            <PreviousIcon />\n          </IconButton>\n        </Tooltip>\n        <div>\n          <Button\n            color=\"secondary\"\n            style={{ minWidth: \"auto\", padding: \"8px 16px\" }}\n            onClick={autoFill}\n            disabled={\n              autofill &&\n              (!autofillSlots ||\n                (autofillSlots &&\n                  Object.values(autofillSlots).filter(x => x.length > 0)\n                    .length === 0))\n            }\n          >\n            {autofill ? \"Go\" : \"AI Autofill\"}\n          </Button>\n          {!autofill && (\n            <Tooltip title=\"Add test scores\">\n              <Button\n                onClick={() => setAddScoresDialog(true)}\n                style={{ marginLeft: 8, padding: 8, minWidth: \"auto\" }}\n                color=\"secondary\"\n              >\n                <AddIcon />\n              </Button>\n            </Tooltip>\n          )}\n          {autofill && (\n            <Tooltip title=\"Cancel\">\n              <Button\n                onClick={() => setAutofill(false)}\n                style={{ marginLeft: 8, padding: 8, minWidth: \"auto\" }}\n                color=\"secondary\"\n              >\n                <CancelIcon />\n              </Button>\n            </Tooltip>\n          )}\n          {autofill && (\n            <Tooltip title=\"Select all today\">\n              <Button\n                onClick={selectAll}\n                style={{ marginLeft: 8, padding: 8, minWidth: \"auto\" }}\n                color=\"secondary\"\n              >\n                <SelectIcon />\n              </Button>\n            </Tooltip>\n          )}\n        </div>\n        <Dialog\n          open={autofillInfo}\n          onClose={() => setAutofillInfo(false)}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            Welcome to AI Autofill!\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              AI Autofill is a revision tool that uses machine learning designed\n              to help you revise as efficiently as possible. To get started,\n              simply:\n              <br />\n              <ol>\n                <li>Pick the timeslots you want to revise for and click Go</li>\n                <li>Choose the subjects you want to revise</li>\n                <li>When you've got your grades back, click the + icon next to AI autofill to enter your grades</li>\n              </ol>\n              <br />\n              AI Autofill will also automatically fill in break periods for you\n              so you don't need to add them yourself.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() => setAutofillInfo(false)}\n              color=\"secondary\"\n              autoFocus\n            >\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Dialog\n          open={stop}\n          onClose={() => setStop(false)}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            You're doing too much revision!\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Seriously, you need to have some breaks dude!\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setStop(false)} color=\"secondary\" autoFocus>\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Dialog\n          open={autofillOpen}\n          onClose={closeAutofill}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">AI Autofill</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Please enter the subjects you would like to revise, and the your\n              recent and required grade for each of them. N.B. if you have\n              selected any slots with items that already repeat daily or weekly, they will be\n              overridden. Otherwise, selecting slots that have one-off items in them will not autofill.\n            </DialogContentText>\n            {subjects ? (\n              <Autocomplete\n                multiple\n                filterSelectedOptions\n                onChange={(e, val) => {\n                  let newRecents = recents;\n                  let newRequireds = requireds;\n                  val.forEach(a => {\n                    if (!newRecents[a]) {\n                      newRecents[a] = 5;\n                    }\n                    if (!newRequireds[a]) {\n                      newRequireds[a] = 5;\n                    }\n                  });\n                  setRecents(newRecents);\n                  setRequireds(newRequireds);\n                  setAutoSubjects(val);\n                }}\n                options={subjects}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      key={index}\n                      variant=\"outlined\"\n                      label={option}\n                      {...getTagProps({ index })}\n                      style={{ margin: 4 }}\n                    />\n                  ))\n                }\n                renderInput={params => (\n                  <TextField\n                    {...params}\n                    label=\"Enter your subjects\"\n                    margin=\"normal\"\n                    variant=\"filled\"\n                    fullWidth\n                  />\n                )}\n              />\n            ) : (\n              <Typography>You don't have any subjects</Typography>\n            )}\n            {autoSubjects.map((a, i) => (\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  marginTop: 8\n                }}\n                key={a}\n              >\n                <Typography style={{ marginRight: 8 }}>{a}</Typography>\n                <div>\n                  <FormControl\n                    variant=\"filled\"\n                    style={{ width: 96, marginRight: 8 }}\n                    size=\"small\"\n                  >\n                    <InputLabel id=\"demo-simple-select-filled-label\">\n                      Recent\n                    </InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-filled-label\"\n                      id=\"demo-simple-select-filled\"\n                      value={recents[a]}\n                      onChange={e =>\n                        setRecents({ ...recents, [a]: e.target.value })\n                      }\n                    >\n                      {[...Array(9).keys()].map(x => (\n                        <MenuItem value={x + 1} key={x}>\n                          {x + 1}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                  <FormControl\n                    variant=\"filled\"\n                    style={{ width: 96 }}\n                    size=\"small\"\n                  >\n                    <InputLabel id=\"demo-simple-select-filled-label\">\n                      Required\n                    </InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-filled-label\"\n                      id=\"demo-simple-select-filled\"\n                      value={requireds[a]}\n                      onChange={e =>\n                        setRequireds({ ...recents, [a]: e.target.value })\n                      }\n                    >\n                      {[...Array(9).keys()].map(x => (\n                        <MenuItem value={x + 1} key={x}>\n                          {x + 1}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </div>\n              </div>\n            ))}\n            {loading && (\n                <div style={{padding: 8, textAlign: \"center\"}}>\n                    <CircularProgress color=\"secondary\" />\n                </div>\n            )}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={closeAutofill} color=\"secondary\">\n              Cancel\n            </Button>\n            <Button onClick={submitAutofill} color=\"secondary\" autoFocus disabled={loading}>\n              Go\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Dialog\n          open={addScoresDialog}\n          onClose={() => setAddScoresDialog(false)}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            Enter your grades for tests you've had\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              If you have never used timetable before click cancel and then AI autofill\n              <br /><br />\n              For the tests that you last revised for using this timetable,\n              enter the grades here - this will help us make the AI Autofill\n              feature more accurate and more likely to help you revise\n              efficiently.\n            </DialogContentText>\n            {subjects ? (\n              <Autocomplete\n                multiple\n                filterSelectedOptions\n                onChange={(e, val) => {\n                  let newGrades = examGrades;\n                  val.forEach(a => {\n                    if (!newGrades[a]) {\n                      newGrades[a] = 5;\n                    }\n                  });\n                  setExamGrades(newGrades);\n                  setExamScoreSubjects(val);\n                }}\n                options={subjects}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      key={index}\n                      variant=\"outlined\"\n                      label={option}\n                      {...getTagProps({ index })}\n                      style={{ margin: 4 }}\n                    />\n                  ))\n                }\n                renderInput={params => (\n                  <TextField\n                    {...params}\n                    label=\"Enter your subjects\"\n                    margin=\"normal\"\n                    variant=\"filled\"\n                    fullWidth\n                  />\n                )}\n              />\n            ) : (\n              <Typography>You don't have any subjects</Typography>\n            )}\n            {examScoreSubjects.map((a, i) => (\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  marginTop: 8\n                }}\n                key={a}\n              >\n                <Typography style={{ marginRight: 8 }}>{a}</Typography>\n                <div>\n                  <FormControl\n                    variant=\"filled\"\n                    style={{ width: 96 }}\n                    size=\"small\"\n                  >\n                    <InputLabel id=\"demo-simple-select-filled-label\">\n                      Grade\n                    </InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-filled-label\"\n                      id=\"demo-simple-select-filled\"\n                      value={examGrades[a]}\n                      onChange={e =>\n                        setExamGrades({ ...examGrades, [a]: e.target.value })\n                      }\n                    >\n                      {[...Array(9).keys()].map(x => (\n                        <MenuItem value={x + 1} key={x}>\n                          {x + 1}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </div>\n              </div>\n            ))}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setAddScoresDialog(false)} color=\"secondary\">\n              Cancel\n            </Button>\n            <Button onClick={submitExamGrades} color=\"secondary\" autoFocus>\n              Go\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Tooltip title=\"Next Day\">\n          <IconButton\n            onClick={() => {\n              const newDate = new Date(selectedDate);\n              newDate.setDate(newDate.getDate() + 1);\n              setSelectedDate(new Date(newDate));\n            }}\n            disabled={\n              autofill\n                ? selectedDate.getTime() >= maxAutofill.getTime()\n                : selectedDate.getTime() >= maxDate.getTime()\n            }\n          >\n            <NextIcon />\n          </IconButton>\n        </Tooltip>\n      </div>\n      <Dialog\n        open={open}\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Change Date to View</DialogTitle>\n        <DialogContent>\n          <DatePicker\n            orientation=\"portrait\"\n            variant=\"static\"\n            openTo=\"date\"\n            value={selectedDate}\n            onChange={setSelectedDate}\n            minDate={minDate}\n            maxDate={!autofill ? maxDate : maxAutofill}\n            autoFocus\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpen(false)} color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {hours.map(hour => {\n        let root = false;\n        let repeatType = \"\";\n        if (\n          timetable[formatDate] &&\n          timetable[formatDate][hour] &&\n          timetable[formatDate][hour].title !== \"\"\n        ) {\n          root = timetable[formatDate];\n        } else if (\n            timetable.autofill &&\n            timetable.autofill[day] &&\n            timetable.autofill[day][hour]\n          ) {\n            root = timetable.autofill[day];\n            repeatType = \"autofill\";\n          } else if (timetable.weekrepeats) {\n          if (timetable.weekrepeats[day] && timetable.weekrepeats[day][hour]) {\n            root = timetable.weekrepeats[day];\n            repeatType = \"week\";\n          } else if (timetable.dayrepeats && timetable.dayrepeats[hour]) {\n            root = timetable.dayrepeats;\n            repeatType = \"day\";\n          }\n        } else if (timetable.dayrepeats && timetable.dayrepeats[hour]) {\n          root = timetable.dayrepeats;\n          repeatType = \"day\";\n        }\n        const select = root[isSmall ? currentHour : hour] &&\n          root[isSmall ? currentHour : hour].title !== \"\" && (\n            <Select\n              value={\n                root && root[isSmall ? currentHour : hour]\n                  ? root[isSmall ? currentHour : hour].type\n                  : \"revision\"\n              }\n              onChange={changeType(\n                formatDate,\n                hour,\n                root[isSmall ? currentHour : hour].title\n              )}\n              style={{ marginLeft: isSmall ? 16 : \"auto\" }}\n              MenuProps={{\n                PaperProps: {\n                  className: classes.paper\n                }\n              }}\n            >\n              <MenuItem value=\"exam\">Exam</MenuItem>\n              <MenuItem value=\"revision\">Revision</MenuItem>\n              <MenuItem value=\"break\">Break</MenuItem>\n            </Select>\n          );\n        return (\n          <div style={{ display: \"flex\" }} key={hour}>\n            <Card\n              style={{\n                marginTop: 8,\n                width: isSmall ? 72 : 144,\n                display: \"flex\",\n                alignItems: \"center\"\n              }}\n            >\n              <CardContent>\n                <Typography className=\"highlight\">\n                  {isSmall ? hour.split(\" -\")[0] : hour}\n                </Typography>\n              </CardContent>\n            </Card>\n            <Card\n              style={{ marginTop: 8, flex: 1, marginLeft: 8 }}\n              onClick={selectAutofill(hour)}\n              className={\n                autofill &&\n                autofillSlots[day] &&\n                autofillSlots[day].includes(hour) &&\n                classes.autofillCard\n              }\n            >\n              <CardContent>\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                  {autofill ? (\n                    <Typography className={classes.autofillText}>\n                      {root && root[hour]\n                        ? repeatType === \"autofill\" ? root[hour] : root[hour].title\n                        : \"Click to select\"}\n                    </Typography>\n                  ) : (\n                    <>\n                      <InputBase\n                        value={root && root[hour] ? repeatType === \"autofill\" ? root[hour] : root[hour].title : \"\"}\n                        placeholder=\"Topic of the hour\"\n                        onChange={changeTitle(\n                          formatDate,\n                          hour,\n                          root && root[hour] ? root[hour].type : \"revision\"\n                        )}\n                        style={{ flex: 1, marginRight: 8 }}\n                        className={\n                          root && root[hour] && root[hour].type === \"exam\"\n                            ? classes.input : repeatType === \"autofill\" ? classes.autofilled\n                            : \"\"\n                        }\n                        onKeyDown={keyDown}\n                        inputProps={{\n                          maxLength: \"64\"\n                        }}\n                      />\n                      {root && root[hour].title !== \"\" && repeatType !== \"autofill\" && (\n                        <>\n                          {!isSmall && select}\n                          {!(\n                            !isSmall &&\n                            root[hour] &&\n                            root[hour].type === \"exam\"\n                          ) && (\n                            <IconButton\n                              onClick={e => {\n                                setAnchorEl(e.currentTarget);\n                                setHour(hour);\n                              }}\n                              size=\"small\"\n                            >\n                              <DotsIcon />\n                            </IconButton>\n                          )}\n                          {root[currentHour] && (\n                            <Menu\n                              anchorEl={anchorEl}\n                              keepMounted\n                              open={Boolean(anchorEl)}\n                              onClose={() => setAnchorEl(null)}\n                              PaperProps={{\n                                className: classes.paper\n                              }}\n                            >\n                              {root[currentHour].type !== \"exam\" && [\n                                <MenuItem\n                                  onClick={setRepeat(\n                                    \"none\",\n                                    formatDate,\n                                    currentHour,\n                                    root[currentHour].type,\n                                    root[currentHour].title,\n                                    repeatType\n                                  )}\n                                >\n                                  Doesn't repeat\n                                </MenuItem>,\n                                <MenuItem\n                                  onClick={setRepeat(\n                                    \"day\",\n                                    formatDate,\n                                    currentHour,\n                                    root[currentHour].type,\n                                    root[currentHour].title,\n                                    repeatType\n                                  )}\n                                >\n                                  Repeat daily\n                                </MenuItem>,\n                                <MenuItem\n                                  onClick={setRepeat(\n                                    \"week\",\n                                    formatDate,\n                                    currentHour,\n                                    root[currentHour].type,\n                                    root[currentHour].title,\n                                    repeatType\n                                  )}\n                                >\n                                  Repeat weekly\n                                </MenuItem>\n                              ]}\n                              <div style={{ width: 138.91 }}>\n                                {isSmall && select}\n                              </div>\n                            </Menu>\n                          )}\n                        </>\n                      )}\n                    </>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        );\n      })}\n    </Paper>\n  ) : (\n    <div className={classes.loadingContainer}>\n      <CircularProgress />\n    </div>\n  );\n};\n"],"sourceRoot":""}