{"version":3,"sources":["../node_modules/@material-ui/core/esm/Divider/Divider.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","components/Settings.js"],"names":["Divider","React","forwardRef","props","ref","_props$absolute","absolute","classes","className","_props$component","component","Component","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","variant","other","_objectWithoutProperties","createElement","_extends","clsx","root","vertical","withStyles","theme","height","margin","border","flexShrink","backgroundColor","palette","divider","position","bottom","left","width","inset","marginLeft","fade","middle","spacing","marginRight","name","Card","_props$raised","raised","Paper","elevation","overflow","CardContent","padding","paddingBottom","FormGroup","_props$row","row","display","flexDirection","flexWrap","useStyles","makeStyles","card","marginBottom","dispatch","useDispatch","history","useHistory","isLight","useSelector","state","lightTheme","userSubjects","subjects","useState","setLightTheme","initialState","oldPassword","newPassword","repeatPassword","values","setValues","helpers","setHelpers","handleChange","field","e","target","value","newState","length","useEffect","type","payload","d","Date","document","cookie","getTime","Typography","gutterBottom","FormControlLabel","control","Switch","checked","onChange","color","label","onSubmit","preventDefault","passwordData","password","fetch","method","body","JSON","stringify","newData","sessionID","getCookie","username","headers","then","res","json","data","errors","newErrors","key","catch","Grid","container","Object","keys","map","item","xs","sm","TextField","startCase","helperText","fullWidth","error","autoComplete","Button","Autocomplete","multiple","freeSolo","filterSelectedOptions","val","console","log","err","updateSubjects","options","defaultValue","renderTags","getTagProps","option","index","Chip","style","renderInput","params","onClick","text","replace"],"mappings":"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","file":"static/js/13.877427c2.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    }\n  };\n};\nvar Divider = React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, light && classes.light, {\n      vertical: classes.vertical\n    }[orientation]),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import React, { useState, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { startCase } from \"lodash\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport getCookie from \"../api/cookies\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    marginBottom: 16\n  }\n}));\n\nexport default () => {\n  const subjects = [\n      \"Maths\",\n      \"Chemistry\",\n      \"Physics\",\n      \"Biology\",\n      \"Computing\",\n      \"Astronomy\",\n      \"Greek\",\n      \"Latin\",\n      \"English literature\",\n      \"English language\",\n      \"Art\",\n      \"Technology\",\n      \"French\",\n      \"Further maths\",\n      \"German\",\n      \"Spanish\",\n      \"Business\",\n      \"Mandarin\",\n      \"Drama\",\n      \"Economics\",\n      \"Food tech\",\n      \"Politics\",\n      \"History\",\n      \"Geography\",\n      \"Italian\",\n      \"Religious studies\",\n      \"Music\",\n      \"Psychology\",\n      \"Statistics\",\n      \"Sociology\",\n      \"Citizenship\",\n      \"Urdu\",\n      \"Underwater basket weaving\"\n    ],\n    classes = useStyles(),\n    dispatch = useDispatch(),\n    history = useHistory(),\n    isLight = useSelector(state => state.lightTheme),\n    userSubjects = useSelector(state => state.subjects),\n    [lightTheme, setLightTheme] = useState(isLight),\n    initialState = {\n      oldPassword: \"\",\n      newPassword: \"\",\n      repeatPassword: \"\"\n    },\n    [values, setValues] = useState(initialState),\n    [helpers, setHelpers] = useState(initialState),\n    save = e => {\n      e.preventDefault();\n      const passwordData =\n        helpers.repeatPassword === \"\" &&\n        helpers.password === \"\" &&\n        helpers.oldPassword === \"\"\n          ? {\n              oldPassword: values.oldPassword,\n              newPassword: values.newPassword\n            }\n          : {};\n      fetch(\"https://maximise.herokuapp.com/users/change_password\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          newData: passwordData,\n          sessionID: getCookie(\"sessionID\"),\n          username: getCookie(\"email\")\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => res.json())\n        .then(data => {\n          if (JSON.stringify(data.errors) !== \"{}\") {\n            let newErrors = helpers;\n            for (let key in data.errors) {\n              newErrors[key] = data.errors[key];\n            }\n            setHelpers(newErrors);\n          } else {\n            setValues(initialState);\n            setHelpers(initialState);\n          }\n        })\n        .catch(() => {\n          dispatch({\n            type: \"NEW_ERROR\",\n            payload: \"There was an error updating your settings\"\n          });\n        });\n    },\n    logout = () => {\n      fetch(\"https://maximise.herokuapp.com/users/logout\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          sessionID: getCookie(\"sessionID\"),\n          username: getCookie(\"email\")\n        })\n      })\n        .then(res => res.text())\n        .then(data => {\n          document.cookie =\n            \"email=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n          document.cookie =\n            \"theme=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n          document.cookie =\n            \"sessionID=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n          dispatch({\n            type: \"TOGGLE_THEME_TYPE\",\n            payload: false\n          });\n          history.replace(\"/\");\n        })\n\n        .catch(() => {\n          dispatch({\n            type: \"NEW_ERROR\",\n            payload: \"There was an error logging you out\"\n          });\n        });\n    },\n    handleChange = field => e => {\n      setValues({\n        ...values,\n        [field]: e.target.value\n      });\n      let newState = {};\n      if (field === \"repeatPassword\") {\n        if (e.target.value.length === 0) {\n          newState = {\n            repeatPassword: \"\"\n          };\n        } else if (e.target.value !== values.newPassword) {\n          newState = {\n            repeatPassword: \"Passwords must match\"\n          };\n        } else {\n          newState = {\n            repeatPassword: \"\"\n          };\n        }\n      }\n      if (field === \"newPassword\") {\n        if (e.target.value.length < 6) {\n          newState = {\n            newPassword: \"Password must at least 6 characters\"\n          };\n        } else {\n          newState = {\n            newPassword: \"\"\n          };\n        }\n        if (e.target.value !== values.newPassword) {\n          newState = {\n            ...newState,\n            repeatPassword: \"Passwords must match\"\n          };\n        } else {\n          newState = {\n            ...newState,\n            repeatPassword: \"\"\n          };\n        }\n      }\n      if (field === \"oldPassword\") {\n        if (e.target.value.length === 0) {\n          newState = {\n            oldPassword: \"Please enter this field\"\n          };\n        } else {\n          newState = {\n            oldPassword: \"\"\n          };\n        }\n      }\n      setHelpers({\n        ...helpers,\n        ...newState\n      });\n    },\n    updateSubjects = val => {\n      fetch(\"https://maximise.herokuapp.com/users/update_data/subjects\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          sessionID: getCookie(\"sessionID\"),\n          username: getCookie(\"email\"),\n          newData: userSubjects\n        })\n      })\n        .then(res => res.json())\n        .then(data => {\n          if (JSON.stringify(data.errors) !== \"{}\") {\n            console.log(data);\n            dispatch({\n              type: \"NEW_ERROR\",\n              payload: \"There was an error updating your subjects\"\n            });\n          } else {\n            dispatch({\n              type: \"CHANGE_SUBJECTS\",\n              payload: val\n            });\n          }\n        })\n        .catch(err => {\n          console.error(err);\n\n          dispatch({\n            type: \"NEW_ERROR\",\n            payload: \"There was an error updating your subjects\"\n          });\n        });\n      dispatch({\n        type: \"CHANGE_SUBJECTS\",\n        payload: val\n      });\n    };\n  useEffect(() => {\n    dispatch({\n      type: \"TOGGLE_THEME_TYPE\",\n      payload: lightTheme\n    });\n    const d = new Date();\n    document.cookie = `theme=${\n      lightTheme ? \"light\" : \"\"\n    }; expires ${d.getTime() + 4e12}; path=/`;\n  }, [lightTheme]);\n  return (\n    <Paper className=\"fade padding\">\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography variant=\"h4\" gutterBottom>\n            Toggle <span className=\"highlight\">light</span> theme\n          </Typography>\n          <FormGroup row>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={lightTheme}\n                  onChange={e => setLightTheme(e.target.checked)}\n                  value=\"lightTheme\"\n                  color=\"primary\"\n                />\n              }\n              label=\"Light Theme\"\n            />\n          </FormGroup>\n        </CardContent>\n      </Card>\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography variant=\"h4\" gutterBottom>\n            Change <span className=\"highlight\">password</span>\n          </Typography>\n          <form onSubmit={save}>\n            <Grid container spacing={2}>\n              {Object.keys(initialState).map(field => (\n                <Grid item xs={12} sm={4} key={field}>\n                  <TextField\n                    label={startCase(field)}\n                    value={values[field]}\n                    onChange={handleChange(field)}\n                    variant=\"filled\"\n                    helperText={helpers[field] + \" \"}\n                    fullWidth\n                    error={helpers[field] !== \"\"}\n                    type=\"password\"\n                    autoComplete=\"false\"\n                  />\n                </Grid>\n              ))}\n            </Grid>\n            <Button variant=\"contained\" type=\"submit\">\n              Change\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography variant=\"h4\" gutterBottom>\n            Edit your <span className=\"highlight\">subjects</span>\n          </Typography>\n          <Autocomplete\n            multiple\n            freeSolo\n            filterSelectedOptions\n            onChange={(e, val) => updateSubjects(val)}\n            options={subjects}\n            defaultValue={userSubjects}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  key={index}\n                  variant=\"outlined\"\n                  label={option}\n                  {...getTagProps({ index })}\n                  style={{ margin: 4 }}\n                />\n              ))\n            }\n            renderInput={params => (\n              <TextField\n                {...params}\n                label=\"Enter your subjects\"\n                margin=\"normal\"\n                variant=\"filled\"\n                fullWidth\n              />\n            )}\n          />\n          <Button variant=\"contained\">Update</Button>\n        </CardContent>\n      </Card>\n      <Divider style={{ margin: \"16px 0\" }} />\n      <Button variant=\"contained\" onClick={logout}>\n        Logout\n      </Button>\n    </Paper>\n  );\n};\n"],"sourceRoot":""}