{"version":3,"sources":["components/Home.js"],"names":["useStyles","makeStyles","theme","item","flex","minWidth","breakpoints","down","padding","paddingTop","paddingBottom","swiper","height","up","display","views","stepper","palette","background","paper","info","whiteSpace","overflow","textOverflow","emphasis","fontWeight","classes","history","useHistory","dispatch","useDispatch","useState","activeStep","setActiveStep","exams","setExams","agenda","setAgenda","goals","setGoals","isSmall","useMediaQuery","examView","className","onClick","push","variant","gutterBottom","length","map","exam","i","key","style","marginBottom","time","float","fontSize","date","title","component","Link","to","color","marginTop","agendaView","todo","subject","Date","getDate","getMonth","getFullYear","desc","goal","marginRight","adviceView","advice","Wellbeing","Revision","tip","dangerouslySetInnerHTML","__html","replace","content","split","useEffect","fetch","method","headers","body","JSON","stringify","sessionID","getCookie","username","then","res","json","data","response","filter","x","timetable","weekrepeats","dayrepeats","newExams","type","catch","err","console","error","payload","margin","maxHeight","marginLeft","index","onChangeIndex","step","enableMouseEvents","steps","position","nextButton","size","disabled","backButton"],"mappings":"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","file":"static/js/15.0b0b6381.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport KeyboardArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport advice from \"../api/advice.json\";\nimport { useDispatch } from \"react-redux\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport getCookie from \"../api/cookies\";\n\nconst useStyles = makeStyles(theme => ({\n  item: {\n    flex: 1,\n    minWidth: 280,\n    [theme.breakpoints.down(1024)]: {\n      minWidth: \"initial\",\n      padding: 16,\n      paddingTop: 0,\n      paddingBottom: 0\n    },\n    paddingTop: 0,\n    paddingBottom: 0,\n    cursor: \"pointer\",\n    overflow: \"auto\"\n  },\n  swiper: {\n      height: \"calc(100% - 32px)\",\n    [theme.breakpoints.up(1024)]: {\n      display: \"none\"\n    }\n  },\n  views: {\n    [theme.breakpoints.down(1024)]: {\n      display: \"none\"\n    },\n    display: \"flex\",\n    margin: \"0 auto\"\n  },\n  stepper: {\n    [theme.breakpoints.up(1024)]: {\n      display: \"none\"\n    },\n    backgroundColor: theme.palette.background.paper,\n    margin: 8,\n    paddingBottom: 0,\n    marginBottom: 0,\n    paddingTop: 0,\n  },\n  info: {\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  },\n  emphasis: {\n    fontWeight: 500\n  }\n}));\n\nexport default () => {\n  const classes = useStyles(),\n    history = useHistory(),\n    dispatch = useDispatch(),\n    [activeStep, setActiveStep] = useState(0),\n    [exams, setExams] = useState([]),\n    [agenda, setAgenda] = useState([]),\n    [goals, setGoals] = useState([]),\n    isSmall = useMediaQuery(\"(max-width: 1024px)\"),\n    examView = (\n      <Paper\n        className={classes.item}\n        onClick={() => history.push(\"/timetable\")}\n      >\n        <Typography variant=\"h4\" gutterBottom>\n          Upcoming <span className=\"highlight\">Exams</span>\n        </Typography>\n        {exams.length !== 0 ? (\n          exams.map((exam, i) => (\n            <Card\n              key={i}\n              style={{ marginBottom: i !== exams.length - 1 ? 8 : 0 }}\n            >\n              <CardContent>\n                <Typography variant=\"h5\" className={classes.emphasis}>\n                  {exam.time}\n                  <span style={{ float: \"right\", fontSize: 16 }}>\n                    {exam.date}\n                  </span>\n                </Typography>\n                <Typography className={classes.info}>{exam.title}</Typography>\n              </CardContent>\n            </Card>\n          ))\n        ) : (\n          <Typography>No upcoming exams</Typography>\n        )}\n        <Button\n          component={Link}\n          to=\"/timetable\"\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ marginTop: 16 }}\n        >\n          View Timetable\n        </Button>\n      </Paper>\n    ),\n    agendaView = (\n      <Paper className={classes.item} onClick={() => history.push(\"/agenda\")}>\n        <Typography variant=\"h4\" gutterBottom>\n          Your <span className=\"highlight\">Agenda</span>\n        </Typography>\n        {agenda.length !== 0 ? (\n          agenda.map((todo, i) => (\n            <Card\n              key={i}\n              style={{ marginBottom: i !== agenda.length - 1 ? 8 : 0 }}\n            >\n              <CardContent>\n                <Typography variant=\"h5\" className={classes.emphasis}>\n                  {todo.subject}\n                  <span style={{ float: \"right\", fontSize: 16 }}>\n                    {new Date(todo.date).getDate()}/\n                    {new Date(todo.date).getMonth() + 1}/\n                    {new Date(todo.date).getFullYear()}\n                  </span>\n                </Typography>\n                <Typography className={classes.info}>{todo.desc}</Typography>\n              </CardContent>\n            </Card>\n          ))\n        ) : (\n          <Typography>Nothing on your agenda at the moment</Typography>\n        )}\n        <Typography variant=\"h4\" gutterBottom style={{ marginTop: 8 }}>\n          Your <span className=\"highlight\">Goals</span>\n        </Typography>\n        {goals.length !== 0 ? (\n          goals.map((goal, i) => (\n            <Card\n              key={i}\n              style={{ marginBottom: i !== agenda.length - 1 ? 8 : 0 }}\n            >\n              <CardContent>\n                <Typography variant=\"h5\" className={classes.emphasis}>\n                  {goal.subject}\n                </Typography>\n                <Typography className={classes.info}>{goal.desc}</Typography>\n              </CardContent>\n            </Card>\n          ))\n        ) : (\n          <Typography>No goals at the moment</Typography>\n        )}\n        <Button\n          component={Link}\n          to=\"/agenda\"\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ marginTop: 16, marginRight: 8 }}\n        >\n          Go To Agenda\n        </Button>\n        <Button\n          component={Link}\n          to=\"/goals\"\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ marginTop: 16 }}\n        >\n          Go To Goals\n        </Button>\n      </Paper>\n    ),\n    adviceView = (\n      <Paper className={classes.item} onClick={() => history.push(\"/advice\")}>\n        <Typography variant=\"h4\" gutterBottom>\n          <span className=\"highlight\">Advice</span>\n        </Typography>\n        {[\n          advice.Wellbeing[1],\n          advice.Wellbeing[2],\n          advice.Revision[3],\n          advice.Wellbeing[6]\n        ].map((tip, i) => (\n          <Card\n            key={i}\n            style={{ marginBottom: i !== advice.length - 1 ? 8 : 0 }}\n          >\n            <CardContent>\n              <Typography\n                variant=\"h5\"\n                gutterBottom\n                dangerouslySetInnerHTML={{\n                  __html: tip.title\n                    .replace(/{/g, \"<span class='highlight'>\")\n                    .replace(/}/g, \"</span>\")\n                }}\n              />\n              <Typography\n                dangerouslySetInnerHTML={{\n                  __html:\n                    tip.content\n                      .replace(/{/g, \"<span class='highlight'>\")\n                      .replace(/}/g, \"</span>\")\n                      .replace(\":--\", \"<ul><li>\")\n                      .replace(\"--:\", \"</li></ul>\")\n                      .replace(\"1--\", \"<ol><li>\")\n                      .replace(\"--1\", \"</li></ol>\")\n                      .replace(/--/g, \"</li><li>\")\n                      .replace(/href='www/g, \"href='https://www\")\n                      .split(\".\")[0]\n                      .split(\"<p>\")[1] + \".\"\n                }}\n              />\n            </CardContent>\n          </Card>\n        ))}\n        <Button\n          component={Link}\n          to=\"/advice\"\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ marginTop: 16 }}\n        >\n          Go To Advice\n        </Button>\n      </Paper>\n    );\n  useEffect(() => {\n    fetch(\n      \"https://maximise.herokuapp.com/users/get_data/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sessionID: getCookie(\"sessionID\"),\n          username: getCookie(\"email\")\n        })\n      }\n    )\n      .then(res => res.json())\n      .then(data => {\n        setAgenda(data.response.agenda.filter((x, i) => i < 3));\n        setGoals(data.response.goals.filter((x, i) => i < 3));\n        const { timetable } = data.response;\n        delete timetable.weekrepeats;\n        delete timetable.dayrepeats;\n        let newExams = [];\n        for (let key in timetable) {\n          for (let time in timetable[key]) {\n            if (timetable[key][time].type === \"exam\") {\n              newExams.push({\n                title: timetable[key][time].title,\n                date: key,\n                time: time.split(\"-\")[0]\n              });\n            }\n          }\n        }\n        setExams(newExams);\n      })\n      .catch(err => {\n        console.error(err);\n\n        dispatch({\n          type: \"NEW_ERROR\",\n          payload: \"There was an error loading your data\"\n        });\n      });\n  }, []);\n  return (\n    <div\n      className={`fade ${true ? \"padding\" : \"\"}`}\n      style={{\n        margin: !true ? \"-8px 0\" : 0,\n        maxHeight: true ? \"calc(100% - 32px)\" : \"100%\",\n        marginBottom: true && 16,\n        marginLeft: isSmall ? 0 : 16,\n        marginRight: isSmall ? 0 : 16\n      }}\n    >\n      <SwipeableViews\n        index={activeStep}\n        onChangeIndex={step => setActiveStep(step)}\n        enableMouseEvents\n        className={classes.swiper}\n      >\n        {examView}\n        {agendaView}\n        {adviceView}\n      </SwipeableViews>\n      <MobileStepper\n        variant=\"dots\"\n        className={classes.stepper}\n        steps={3}\n        position=\"static\"\n        activeStep={activeStep}\n        nextButton={\n          <IconButton\n            size=\"small\"\n            onClick={() => setActiveStep(activeStep + 1)}\n            disabled={activeStep === 2}\n          >\n            <KeyboardArrowRightIcon />\n          </IconButton>\n        }\n        backButton={\n          <IconButton\n            size=\"small\"\n            onClick={() => setActiveStep(activeStep - 1)}\n            disabled={activeStep === 0}\n          >\n            <KeyboardArrowLeftIcon />\n          </IconButton>\n        }\n      />\n      <div className={classes.views}>\n        {examView}\n        {agendaView}\n        {adviceView}\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}