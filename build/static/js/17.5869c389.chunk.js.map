{"version":3,"sources":["components/Goals.js"],"names":["useStyles","makeStyles","theme","loadingContainer","textAlign","margin","newGoal","marginTop","iconBtn","marginBottom","swiper","borderRadius","card","breakpoints","down","up","height","dispatch","useDispatch","classes","useState","goals","setGoals","clientGoals","setClientGoals","Current","Completed","activeStep","setActiveStep","desc","newTitle","newDesc","values","setValues","i","type","currentGoal","setCurrentGoal","delete","edit","dialogs","setDialogs","isSmall","useMediaQuery","Container","Grid","SwipeableViews","close","dialog","open","handleChange","name","e","target","value","goalDone","goal","completed","filter","x","j","redoGoal","useEffect","fetch","method","headers","body","JSON","stringify","sessionID","getCookie","username","then","res","json","data","console","log","errors","payload","response","catch","newData","className","Object","keys","sort","reverse","map","key","variant","gutterBottom","container","spacing","index","onChangeIndex","step","enableMouseEvents","containerProps","item","xs","sm","md","lg","style","display","alignItems","overflow","textTruncate","subject","marginLeft","placement","title","color","onClick","length","steps","position","nextButton","size","disabled","backButton","toLowerCase","onClose","aria-labelledby","aria-describedby","id","autoFocus","fullWidth","onSubmit","preventDefault","onChange","label"],"mappings":"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","file":"static/js/17.5869c389.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport { IconButton, Grid, TextField } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport RedoIcon from \"@material-ui/icons/Refresh\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\nimport KeyboardArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useDispatch } from \"react-redux\";\nimport getCookie from \"../api/cookies\";\n\nconst useStyles = makeStyles(theme => ({\n  loadingContainer: {\n    textAlign: \"center\",\n    margin: \"0 auto\",\n  },\n  newGoal: {\n    marginTop: 16\n  },\n  iconBtn: {\n    marginBottom: 8\n  },\n  swiper: {\n    borderRadius: \"8px 8px 0 0\"\n  },\n  card: {\n    [theme.breakpoints.down(600)]: {\n      borderRadius: 0\n    },\n    [theme.breakpoints.up(600)]: {\n      height: \"100%\"\n    },\n    height: \"100%\"\n  }\n}));\n\nexport default () => {\n  const dispatch = useDispatch(),\n    classes = useStyles(),\n    [goals, setGoals] = useState(null),\n    [clientGoals, setClientGoals] = useState(null),\n    [activeStep, setActiveStep] = useState({\n      Current: 0,\n      Completed: 0\n    }),\n    [values, setValues] = useState({\n      desc: \"\",\n      newTitle: \"\",\n      newDesc: \"\"\n    }),\n    [currentGoal, setCurrentGoal] = useState({\n      i: 0,\n      type: \"Current\"\n    }),\n    [dialogs, setDialogs] = useState({\n      delete: false,\n      edit: false,\n      newGoal: false\n    }),\n    isSmall = useMediaQuery(\"(min-width: 600px)\"),\n    Container = isSmall ? Grid : SwipeableViews,\n    containerProps = type =>\n      isSmall\n        ? {\n            container: true,\n            spacing: 2,\n            className: classes.container\n          }\n        : {\n            index: activeStep[type],\n            onChangeIndex: step => {\n              setActiveStep({\n                ...activeStep,\n                [type]: step\n              });\n            },\n            enableMouseEvents: true,\n            className: classes.swiper\n          },\n    close = dialog => () => {\n      setDialogs({\n        ...dialogs,\n        [dialog]: false\n      });\n    },\n    open = (dialog, i, type) => () => {\n      setCurrentGoal({\n        i,\n        type\n      });\n      if (dialog === \"edit\") {\n        setValues({\n          ...values,\n          desc: goals[type][i].desc\n        });\n      }\n      setDialogs({\n        ...dialogs,\n        [dialog]: true\n      });\n    },\n    handleChange = name => e => {\n      setValues({\n        ...values,\n        [name]: e.target.value\n      });\n    },\n    goalDone = i => () => {\n      const goal = goals.Current[i];\n      goal.completed = true;\n      setClientGoals({\n        Current: goals.Current.filter((x, j) => j !== i),\n        Completed: [goal, ...goals.Completed]\n      });\n    },\n    deleteGoal = () => {\n      setClientGoals({\n        ...goals,\n        [currentGoal.type]: goals[currentGoal.type].filter(\n          (x, i) => i !== currentGoal.i\n        )\n      });\n      setDialogs({\n        ...dialogs,\n        delete: false\n      });\n    },\n    redoGoal = i => () => {\n      const goal = goals.Completed[i];\n      goal.completed = false;\n      setClientGoals({\n        Completed: goals.Completed.filter((x, j) => j !== i),\n        Current: [goal, ...goals.Current],\n      });\n    },\n    changeDesc = e => {\n      e.preventDefault();\n      setClientGoals({\n        ...goals,\n        Current: goals.Current.map((x, i) =>\n          i === currentGoal.i\n            ? {\n                ...x,\n                desc: values.desc\n              }\n            : x\n        )\n      });\n      close(\"edit\")();\n    },\n    createGoal = e => {\n      e.preventDefault();\n      setClientGoals({\n        Completed: goals.Completed,\n        Current: [\n          {\n            subject: values.newTitle,\n            desc: values.newDesc,\n            completed: false\n          },\n          ...goals.Current\n        ],\n      });\n      close(\"newGoal\")();\n      setValues({\n        desc: \"\",\n        newTitle: \"\",\n        newDesc: \"\"\n      });\n    };\n  useEffect(() => {\n    fetch(\"https://maximise.herokuapp.com/users/get_data/goals\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sessionID: getCookie(\"sessionID\"),\n          username: getCookie(\"email\")\n        })\n      })\n      .then(res => res.json())\n      .then(data => {\n          console.log(data)\n          if (JSON.stringify(data.errors) !== \"{}\") {\n            dispatch({\n              type: \"NEW_ERROR\",\n              payload: \"There was an error loading your goals\"\n            });\n          } else {\n        setGoals(data.response ? data.response : {\n            Completed: [],\n            Current: []\n        });\n        setClientGoals(data.response ? data.response : {\n            Completed: [],\n            Current: []\n        });\n    }\n      })\n      .catch(() => {\n        dispatch({\n          type: \"NEW_ERROR\",\n          payload: \"There was an error loading your goals\"\n        });\n      });\n  }, []);\n  useEffect(() => {\n      if (clientGoals && JSON.stringify(clientGoals) !== JSON.stringify(goals)) {\n    fetch(\"https://maximise.herokuapp.com/users/update_data/goals\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        newData: clientGoals,\n        sessionID: getCookie(\"sessionID\"),\n        username: getCookie(\"email\")\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (JSON.stringify(data.errors) !== \"{}\") {\n          dispatch({\n            type: \"NEW_ERROR\",\n            payload: \"There was an error updating your goals\"\n          });\n        } else {\n          setGoals(clientGoals);\n        }\n      })\n      .catch(() => {\n        dispatch({\n          type: \"NEW_ERROR\",\n          payload: \"There was an error updating your goals\"\n        });\n      });\n    }\n  }, [clientGoals]);\n\n  return goals ? (\n    <Paper className=\"fade padding\">\n      {Object.keys(goals).sort().reverse().map(type => (\n        <Fragment key={type}>\n          <Typography variant=\"h4\" gutterBottom>\n            <span className=\"highlight\">{type + \" \"}</span>\n            Goals\n          </Typography>\n          <Container {...containerProps(type)}>\n            {goals[type].map((goal, i) => (\n              <Grid item xs={12} sm={6} md={4} lg={3} key={i}>\n                <Card className={classes.card}>\n                  <CardContent>\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                      <Typography\n                        variant=\"h5\"\n                        gutterBottom\n                        style={{ overflow: \"hidden\", textTruncate: \"ellipsis\" }}\n                      >\n                        {goal.subject}\n                      </Typography>\n                      <div style={{ marginLeft: \"auto\", display: \"flex\" }}>\n                        <Tooltip placement=\"bottom\" title=\"Delete\">\n                          <IconButton\n                            color=\"primary\"\n                            className={classes.iconBtn}\n                            onClick={open(\"delete\", i, type)}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </Tooltip>\n                        {type === \"Current\" && (\n                          <Tooltip placement=\"bottom\" title=\"Edit\">\n                            <IconButton\n                              color=\"primary\"\n                              className={classes.iconBtn}\n                              onClick={open(\"edit\", i, type)}\n                            >\n                              <EditIcon />\n                            </IconButton>\n                          </Tooltip>\n                        )}\n                        <Tooltip\n                          placement=\"bottom\"\n                          title={type === \"Current\" ? \"Done\" : \"Redo\"}\n                        >\n                          <IconButton\n                            color=\"primary\"\n                            className={classes.iconBtn}\n                            onClick={\n                              type === \"Current\" ? goalDone(i) : redoGoal(i)\n                            }\n                          >\n                            {type === \"Current\" ? <DoneIcon /> : <RedoIcon />}\n                          </IconButton>\n                        </Tooltip>\n                      </div>\n                    </div>\n                    <Typography>{goal.desc}</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Container>\n          {goals[type].length > 0 ? (\n            !isSmall && (\n              <MobileStepper\n                variant=\"dots\"\n                style={{\n                  marginBottom: type === \"Wellbeing\" ? 16 : 0,\n                  borderRadius: \"0 0 8px 8px\"\n                }}\n                steps={goals[type].length}\n                position=\"static\"\n                activeStep={activeStep[type]}\n                nextButton={\n                  <IconButton\n                    size=\"small\"\n                    onClick={() =>\n                      setActiveStep({\n                        ...activeStep,\n                        [type]: activeStep[type] + 1\n                      })\n                    }\n                    disabled={activeStep[type] === goals[type].length - 1}\n                  >\n                    <KeyboardArrowRightIcon />\n                  </IconButton>\n                }\n                backButton={\n                  <IconButton\n                    size=\"small\"\n                    onClick={() =>\n                      setActiveStep({\n                        ...activeStep,\n                        [type]: activeStep[type] - 1\n                      })\n                    }\n                    disabled={activeStep[type] === 0}\n                  >\n                    <KeyboardArrowLeftIcon />\n                  </IconButton>\n                }\n              />\n            )\n          ) : (\n            <p>You don't have any {type.toLowerCase()} goals yet</p>\n          )}\n          {type === \"Current\" && (\n            <>\n              <Button\n                variant=\"contained\"\n                className={classes.newGoal}\n                onClick={open(\"newGoal\", 0, \"Current\")}\n              >\n                New Goal\n              </Button>\n              <Divider style={{ margin: \"16px 0\" }} />\n            </>\n          )}\n        </Fragment>\n      ))}\n      <Dialog\n        open={dialogs.delete}\n        onClose={close(\"delete\")}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Confirm action</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to delete this goal?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={close(\"delete\")} color=\"primary\" variant=\"outlined\">\n            Cancel\n          </Button>\n          <Button onClick={deleteGoal} color=\"primary\" autoFocus>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        open={dialogs.edit}\n        onClose={close(\"edit\")}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        fullWidth\n      >\n        <form onSubmit={changeDesc}>\n          <DialogTitle id=\"alert-dialog-title\">\n            Change goal description\n          </DialogTitle>\n          <DialogContent>\n            <TextField\n              onChange={handleChange(\"desc\")}\n              value={values.desc}\n              variant=\"filled\"\n              label=\"Enter the new goal description\"\n              autoFocus\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={close(\"edit\")} color=\"primary\">\n              Cancel\n            </Button>\n            <Button type=\"submit\" color=\"primary\" disabled={values.desc === \"\"}>\n              Change\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n      <Dialog\n        open={dialogs.newGoal}\n        onClose={close(\"newGoal\")}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        fullWidth\n      >\n        <form onSubmit={createGoal}>\n          <DialogTitle id=\"alert-dialog-title\">Create a new goal</DialogTitle>\n          <DialogContent>\n            <TextField\n              onChange={handleChange(\"newTitle\")}\n              value={values.newTitle}\n              variant=\"filled\"\n              label=\"Enter the new goal's title\"\n              autoFocus\n              fullWidth\n              style={{\n                marginBottom: 16\n              }}\n            />\n            <TextField\n              onChange={handleChange(\"newDesc\")}\n              value={values.newDesc}\n              variant=\"filled\"\n              label=\"Enter the new goal's description\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={close(\"newGoal\")} color=\"primary\">\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              color=\"primary\"\n              disabled={values.newTitle === \"\" || values.newDesc === \"\"}\n            >\n              Create\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </Paper>\n  ) : (\n    <div className={classes.loadingContainer}>\n      <CircularProgress />\n    </div>\n  );\n};\n"],"sourceRoot":""}