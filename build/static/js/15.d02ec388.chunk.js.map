{"version":3,"sources":["../node_modules/@material-ui/icons/ExpandMore.js","../node_modules/@material-ui/core/esm/Collapse/Collapse.js","../node_modules/@material-ui/core/esm/ExpansionPanel/ExpansionPanelContext.js","../node_modules/@material-ui/core/esm/ExpansionPanel/ExpansionPanel.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/@material-ui/core/esm/ExpansionPanelDetails/ExpansionPanelDetails.js","../node_modules/@material-ui/core/esm/ExpansionPanelSummary/ExpansionPanelSummary.js","components/Help.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","Collapse","React","forwardRef","props","ref","children","classes","className","_props$collapsedHeigh","collapsedHeight","collapsedHeightProp","_props$component","component","Component","inProp","in","onEnter","onEntered","onEntering","onExit","onExiting","style","_props$timeout","timeout","duration","standard","other","_objectWithoutProperties","theme","useTheme","timer","useRef","wrapperRef","autoTransitionDuration","concat","useEffect","clearTimeout","current","Transition","_extends","node","isAppearing","height","wrapperHeight","clientHeight","transitionDuration","getTransitionProps","mode","duration2","transitions","getAutoHeightDuration","addEndListener","_","next","setTimeout","state","childProps","clsx","container","entered","exited","hidden","minHeight","wrapper","wrapperInner","muiSupportAuto","withStyles","overflow","transition","create","visibility","display","width","name","ExpansionPanelContext","createContext","ExpansionPanel","childrenProp","_props$defaultExpande","defaultExpanded","_props$disabled","disabled","expandedProp","expanded","onChange","_props$square","square","_props$TransitionComp","TransitionComponent","TransitionProps","isControlled","_React$useState","useState","expandedState","setExpandedState","arr","handleChange","useCallback","event","_React$Children$toArr","Children","toArray","_React$Children$toArr2","arrayWithHoles","iterableToArray","nonIterableRest","summary","slice","contextValue","useMemo","toggle","Paper","root","rounded","Provider","id","role","shortest","position","left","top","right","content","opacity","backgroundColor","palette","divider","margin","marginTop","marginBottom","action","disabledBackground","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","ExpansionPanelDetails","padding","ExpansionPanelSummary","expandIcon","IconButtonProps","onBlur","onClick","onFocusVisible","focusedState","setFocusedState","_React$useContext","useContext","_React$useContext$dis","ButtonBase","focusRipple","disableRipple","focused","IconButton","edge","tabIndex","cursor","grey","flexGrow","transform","useStyles","makeStyles","icon","color","primary","main","panel","textDecoration","text","setExpanded","faqs","map","faq","i","isExpanded","key","aria-controls","Typography","variant","dangerouslySetInnerHTML","__html","q","replace","a"],"mappings":"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","file":"static/js/15.d02ec388.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport { getTransitionProps } from '../transitions/utils';\nimport useTheme from '../styles/useTheme';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the container element. */\n    container: {\n      height: 0,\n      overflow: 'hidden',\n      transition: theme.transitions.create('height')\n    },\n\n    /* Styles applied to the container element when the transition has entered. */\n    entered: {\n      height: 'auto',\n      overflow: 'visible'\n    },\n\n    /* Styles applied to the container element when the transition has exited and `collapsedHeight` != 0px. */\n    hidden: {\n      visibility: 'hidden'\n    },\n\n    /* Styles applied to the outer wrapper element. */\n    wrapper: {\n      // Hack to get children with a negative margin to not falsify the height computation.\n      display: 'flex'\n    },\n\n    /* Styles applied to the inner wrapper element. */\n    wrapperInner: {\n      width: '100%'\n    }\n  };\n};\n/**\n * The Collapse transition is used by the\n * [Vertical Stepper](/components/steppers/#vertical-stepper) StepContent component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Collapse = React.forwardRef(function Collapse(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$collapsedHeigh = props.collapsedHeight,\n      collapsedHeightProp = _props$collapsedHeigh === void 0 ? '0px' : _props$collapsedHeigh,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExiting = props.onExiting,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? duration.standard : _props$timeout,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapsedHeight\", \"component\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExiting\", \"style\", \"timeout\"]);\n\n  var theme = useTheme();\n  var timer = React.useRef();\n  var wrapperRef = React.useRef(null);\n  var autoTransitionDuration = React.useRef();\n  var collapsedHeight = typeof collapsedHeightProp === 'number' ? \"\".concat(collapsedHeightProp, \"px\") : collapsedHeightProp;\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  var handleEnter = function handleEnter(node, isAppearing) {\n    node.style.height = collapsedHeight;\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  var handleEntering = function handleEntering(node, isAppearing) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n\n    var _getTransitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'enter'\n    }),\n        transitionDuration = _getTransitionProps.duration;\n\n    if (timeout === 'auto') {\n      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);\n      node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n    }\n\n    node.style.height = \"\".concat(wrapperHeight, \"px\");\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  };\n\n  var handleEntered = function handleEntered(node, isAppearing) {\n    node.style.height = 'auto';\n\n    if (onEntered) {\n      onEntered(node, isAppearing);\n    }\n  };\n\n  var handleExit = function handleExit(node) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n    node.style.height = \"\".concat(wrapperHeight, \"px\");\n\n    if (onExit) {\n      onExit(node);\n    }\n  };\n\n  var handleExiting = function handleExiting(node) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n\n    var _getTransitionProps2 = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'exit'\n    }),\n        transitionDuration = _getTransitionProps2.duration;\n\n    if (timeout === 'auto') {\n      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);\n      node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n    }\n\n    node.style.height = collapsedHeight;\n\n    if (onExiting) {\n      onExiting(node);\n    }\n  };\n\n  var addEndListener = function addEndListener(_, next) {\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTransitionDuration.current || 0);\n    }\n  };\n\n  return React.createElement(Transition, _extends({\n    in: inProp,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    addEndListener: addEndListener,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other), function (state, childProps) {\n    return React.createElement(Component, _extends({\n      className: clsx(classes.container, className, {\n        entered: classes.entered,\n        exited: !inProp && collapsedHeight === '0px' && classes.hidden\n      }[state]),\n      style: _extends({\n        minHeight: collapsedHeight\n      }, style),\n      ref: ref\n    }, childProps), React.createElement(\"div\", {\n      className: classes.wrapper,\n      ref: wrapperRef\n    }, React.createElement(\"div\", {\n      className: classes.wrapperInner\n    }, children)));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Collapse.propTypes = {\n  /**\n   * The content node to be collapsed.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The height of the container when collapsed.\n   */\n  collapsedHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  }), PropTypes.oneOf(['auto'])])\n} : void 0;\nCollapse.muiSupportAuto = true;\nexport default withStyles(styles, {\n  name: 'MuiCollapse'\n})(Collapse);","import React from 'react';\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\n\nvar ExpansionPanelContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ExpansionPanelContext.displayName = 'ExpansionPanelContext';\n}\n\nexport default ExpansionPanelContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport ExpansionPanelContext from './ExpansionPanelContext';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {}\n  };\n};\nvar ExpansionPanel = React.forwardRef(function ExpansionPanel(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _React$useRef = React.useRef(expandedProp != null),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultExpanded),\n      expandedState = _React$useState[0],\n      setExpandedState = _React$useState[1];\n\n  var expanded = isControlled ? expandedProp : expandedState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (isControlled !== (expandedProp != null)) {\n        console.error([\"Material-UI: A component is changing \".concat(isControlled ? 'a ' : 'an un', \"controlled ExpansionPanel to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', 'Decide between using a controlled or uncontrolled ExpansionPanel ' + 'element for the lifetime of the component.', 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [expandedProp, isControlled]);\n  }\n\n  var handleChange = React.useCallback(function (event) {\n    if (!isControlled) {\n      setExpandedState(!expanded);\n    }\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, isControlled, onChange]);\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  var contextValue = React.useMemo(function () {\n    return {\n      expanded: expanded,\n      disabled: disabled,\n      toggle: handleChange\n    };\n  }, [expanded, disabled, handleChange]);\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), React.createElement(ExpansionPanelContext.Provider, {\n    value: contextValue\n  }, summary), React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\"\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanel.propTypes = {\n  /**\n   * The content of the expansion panel.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, function (props) {\n    var summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"Material-UI: the ExpansionPanel doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (!React.isValidElement(summary)) {\n      return new Error('Material-UI: expected the first child of ExpansionPanel to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the panel by default.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the panel will be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, expands the panel, otherwise collapse it.\n   * Setting this prop enables control over the panel.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {boolean} expanded The `expanded` state of the panel.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The component used for the collapse effect.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the `Transition` element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanel'\n})(ExpansionPanel);","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    padding: '8px 24px 24px'\n  }\n};\nvar ExpansionPanelDetails = React.forwardRef(function ExpansionPanelDetails(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelDetails.propTypes = {\n  /**\n   * The content of the expansion panel details.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelDetails'\n})(ExpansionPanelDetails);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ButtonBase from '../ButtonBase';\nimport IconButton from '../IconButton';\nimport withStyles from '../styles/withStyles';\nimport ExpansionPanelContext from '../ExpansionPanel/ExpansionPanelContext';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      minHeight: 8 * 6,\n      transition: theme.transitions.create(['min-height', 'background-color'], transition),\n      padding: '0 24px 0 24px',\n      '&:hover:not($disabled)': {\n        cursor: 'pointer'\n      },\n      '&$expanded': {\n        minHeight: 64\n      },\n      '&$focused': {\n        backgroundColor: theme.palette.grey[300]\n      },\n      '&$disabled': {\n        opacity: 0.38\n      }\n    },\n\n    /* Pseudo-class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the children wrapper element. */\n    content: {\n      display: 'flex',\n      flexGrow: 1,\n      transition: theme.transitions.create(['margin'], transition),\n      margin: '12px 0',\n      '&$expanded': {\n        margin: '20px 0'\n      }\n    },\n\n    /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */\n    expandIcon: {\n      transform: 'rotate(0deg)',\n      transition: theme.transitions.create('transform', transition),\n      '&:hover': {\n        // Disable the hover effect for the IconButton,\n        // because a hover effect should apply to the entire Expand button and\n        // not only to the IconButton.\n        backgroundColor: 'transparent'\n      },\n      '&$expanded': {\n        transform: 'rotate(180deg)'\n      }\n    }\n  };\n};\nvar ExpansionPanelSummary = React.forwardRef(function ExpansionPanelSummary(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      expandIcon = props.expandIcon,\n      IconButtonProps = props.IconButtonProps,\n      onBlur = props.onBlur,\n      onClick = props.onClick,\n      onFocusVisible = props.onFocusVisible,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"expandIcon\", \"IconButtonProps\", \"onBlur\", \"onClick\", \"onFocusVisible\"]);\n\n  var _React$useState = React.useState(false),\n      focusedState = _React$useState[0],\n      setFocusedState = _React$useState[1];\n\n  var handleFocusVisible = function handleFocusVisible(event) {\n    setFocusedState(true);\n\n    if (onFocusVisible) {\n      onFocusVisible(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    setFocusedState(false);\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var _React$useContext = React.useContext(ExpansionPanelContext),\n      _React$useContext$dis = _React$useContext.disabled,\n      disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis,\n      expanded = _React$useContext.expanded,\n      toggle = _React$useContext.toggle;\n\n  var handleChange = function handleChange(event) {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return React.createElement(ButtonBase, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className, disabled && classes.disabled, expanded && classes.expanded, focusedState && classes.focused),\n    onFocusVisible: handleFocusVisible,\n    onBlur: handleBlur,\n    onClick: handleChange,\n    ref: ref\n  }, other), React.createElement(\"div\", {\n    className: clsx(classes.content, expanded && classes.expanded)\n  }, children), expandIcon && React.createElement(IconButton, _extends({\n    className: clsx(classes.expandIcon, expanded && classes.expanded),\n    edge: \"end\",\n    component: \"div\",\n    tabIndex: null,\n    role: null,\n    \"aria-hidden\": true\n  }, IconButtonProps), expandIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelSummary.propTypes = {\n  /**\n   * The content of the expansion panel summary.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * Props applied to the `IconButton` element wrapping the expand icon.\n   */\n  IconButtonProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelSummary'\n})(ExpansionPanelSummary);","import React, { useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport faqs from \"../api/faqs.json\";\n\nconst useStyles = makeStyles(theme => ({\n    icon: {\n        color: theme.palette.primary.main,\n    },\n    panel: {\n        \"& a\": {\n            \"&, &:visited\": {\n                textDecoration: \"none\",\n                color: theme.palette.text.primary,\n            },\n        },\n        \"& p\": {\n            margin: 0,\n        },\n    },\n}));\n\nexport default () => {\n    const\n        classes = useStyles(),\n        [expanded, setExpanded] = useState(false),\n        handleChange = panel => (event, isExpanded) => {\n            setExpanded(isExpanded ? panel : false);\n        };\n    return (\n        <Paper className=\"fade padding\">\n            {faqs.map((faq, i) => (\n                <ExpansionPanel\n                    expanded={expanded === i}\n                    onChange={handleChange(i)}\n                    key={i}\n                    className={classes.panel}\n                >\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon className={classes.icon} />}\n                        aria-controls=\"panel1bh-content\"\n                    >\n                        <Typography\n                            variant=\"h5\"\n                            dangerouslySetInnerHTML={{\n                                __html: faq.q\n                                    .replace(/{/g, \"<span class='highlight'>\")\n                                    .replace(/}/g, \"</span>\")\n                            }}\n                        />\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Typography\n                            dangerouslySetInnerHTML={{\n                                __html: faq.a\n                                    .replace(/{/g, \"<span class='highlight'>\")\n                                    .replace(/}/g, \"</span>\")\n                            }}\n                        />\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            ))}\n        </Paper>\n    );\n};"],"sourceRoot":""}